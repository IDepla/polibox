<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
   http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
 ">

	<context:property-placeholder
		location="WEB-INF/configuration/dao/persistence.properties" />


	<context:component-scan
		base-package="it.polito.ai.polibox.persistency,
						 				it.polito.ai.polibox.service
						 " />


	<jpa:repositories base-package="it.polito.ai.polibox.persistency.model.dao" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.pass}" />

		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="acquireIncrement" value="${jdbc.incrementPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />

	</bean>

	<!-- hibernate -->
	<!-- al posto di sessionFactory entityManagerFactory org.springframework.orm.hibernate4.LocalSessionFactoryBean -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="packagesToScan">
			<list>
				<value>it.polito.ai.polibox.persistency</value>
			</list>
		</property>

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>

		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			</props>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.jpa.vendor.HibernateJpaSessionFactoryBean">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- org.springframework.orm.hibernate4.HibernateTransactionManager - - 
		> <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" />



	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>