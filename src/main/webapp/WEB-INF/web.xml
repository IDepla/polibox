<?xml version="1.0" encoding="UTF-8"?>
<web-app 
	xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
    version="3.0">
  <display-name>polibox</display-name>
  
  <!-- logging configuration and startup -->
  <context-param>
      <param-name>log4jConfigLocation</param-name>
      <param-value>/WEB-INF/configuration/logger/log4j.properties</param-value>
  </context-param>
  <context-param>
      <param-name>log4jRefreshInterval</param-name>
      <param-value>1000</param-value>
  </context-param>
  <listener>
      <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  
  <!-- caricamento del contesto -->
  <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>
      		/WEB-INF/configuration/dao/hibernate.xml
      		/WEB-INF/configuration/spring/spring-security.xml
      		/WEB-INF/configuration/spring/context.xml
      </param-value>
  </context-param>
   <listener>
       <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>
  
  <!-- configures Spring for use with the request scope for Spring beans -->
   <listener>
       <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
   </listener>
   
  <!--  security delegation  -->
    <filter>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	  <async-supported>true</async-supported>
	</filter>
	
	<filter-mapping>
	  <filter-name>springSecurityFilterChain</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
  
 
   <!--  jersey dispatcher 
   mappa REST 
   
   si occupa di restituire i dati
   
    <servlet>
        <servlet-name>jerseyApplication</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
         <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>it.polito.ai.polibox.configuration.JerseyApplication</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>jerseyApplication</servlet-name>
        <url-pattern>/rest/*</url-pattern>
    </servlet-mapping>
   -->
    
    <!-- 
    <filter>
        <filter-name>jerseyApplication</filter-name>
        <filter-class>org.glassfish.jersey.servlet.ServletContainer</filter-class>
        <init-param>
		    <param-name>jersey.config.server.provider.packages</param-name>
		    <param-value>
		       it.polito.ai.polibox.web
		    </param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
    </filter>
    <filter-mapping>
        <filter-name>jerseyApplication</filter-name>
        <url-pattern>/rest/*</url-pattern>
    </filter-mapping>
    -->
 
 
 
 
  <!--  spring dispatcher 
		mappa mvc
		si occupa di restituire i pezzi delle pagine richiesti  
  -->
  <servlet>
  	<servlet-name>spring</servlet-name>
  	<servlet-class>
  		org.springframework.web.servlet.DispatcherServlet
  	</servlet-class>
 	<init-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/configuration/spring/spring-servlet.xml</param-value>
	</init-param>
  	<load-on-startup>2</load-on-startup>
  	<async-supported>true</async-supported>
  </servlet>
  <servlet-mapping>
  	<servlet-name>spring</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>

	<!-- Disables Servlet Container welcome file handling. Needed for compatibility with Servlet 3.0 and Tomcat 7.0 -->
	<welcome-file-list>
		<welcome-file></welcome-file>
	</welcome-file-list>	
  
</web-app>
